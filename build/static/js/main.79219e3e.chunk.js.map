{"version":3,"sources":["images/down.svg","redux/reducers/signupReducers.js","redux/types.js","redux/reducers/loginReducers.js","redux/reducers/chatsReducers.js","redux/reducers/playersReducers.js","redux/reducers/specificPlayerReducer.js","redux/reducers/messageUserId.js","redux/reducers/chatRoomReducers.js","redux/rootreduers.js","redux/store.js","containers/header.js","redux/actions/login_signup.js","redux/actions/chat.js","redux/actions/playersAction.js","containers/profileCard.js","redux/actions/signout.js","containers/feeds.js","containers/messages.js","containers/recent_updates.js","pages/home.js","pages/login.js","pages/signup.js","pages/messages.js","containers/player_card.js","redux/actions/messagesAction.js","pages/player.js","pages/tournament.js","containers/hosted_tourna.js","containers/active_tourna.js","containers/past_tourna.js","containers/matches_tourna.js","pages/teams.js","containers/create_team.js","containers/join_team.js","routes/apirouter.js","index.js","images/propic.svg","images/search.svg","images/versus.svg"],"names":["module","exports","initialStateSignup","loading","posted","error","SignupReducers","state","action","type","payload","initialStateLogin","loggedin","user","LoginReducers","initialState","chats","roomId","ChatReducers","players","PlayersReducers","player","SPecPlayersReducers","UsersId","MsgUserIdReducers","ChatRoomReducers","rootReducer","combineReducers","signup","login","specificPlayer","msgUserIds","chatRoom","persistConfig","key","storage","whitelist","persistReducer","store","createStore","combined","composeWithDevTools","applyMiddleware","logger","thunk","persistor","persistStore","Header","useSelector","username","useEffect","a","fetch","then","res","json","data","token","localStorage","clear","document","querySelector","header","window","onscroll","scrollY","classList","add","remove","LoginAction","className","id","to","placeholder","src","search","alt","onClick","location","href","signupFail","CreateUser","dispatch","method","headers","body","JSON","stringify","err","catch","loginFail","console","log","loginSuccess","chatFail","GetChats","AddChatOUt","chat","Addchat","playersFail","ProfileCard","useDispatch","profilePic","Feeds","propic","versus","Messages","map","e","RecentUpdates","props","Home","Login","useState","inv_user","setInv_user","inv_pass","setInv_pass","password","logindata","setLogindata","handleLogin","IsUser","toString","indexOf","for","name","value","onChange","target","Signup","inv_email","setInv_email","inv_phone","setInv_phone","match_pass","setMatch_pass","f_name","l_name","email","phone_num","userData","setUserData","getElementById","chatmsg","handleChange","setState","submitHandler","preventDefault","userId","nowtime","moment","socket","emit","this","io","on","msg","Message","React","Component","connect","bindActionCreators","PlayerCard","FirstName","LastName","Id","Players","Tournament","Tourn_Cat","activeClassName","exact","Hosted_Tourna","tourName","venue","description","Tdata","setTdata","Tourna","setTourna","GetTourna","alert","trigger","modal","nested","close","length","t","i","TourName","Venue","Description","defaultValue","Active_Tourna","Past_Tourna","Matches_Tourna","Teams","teams","setTeams","team","TeamName","TeamField","TeamSize","TeamCode","useStyles","makeStyles","theme","root","margin","spacing","width","color","borderBottomColor","formControl","minWidth","selectEmpty","marginTop","styles","marginBottom","select","textAlign","CreateTeam","Tname","field","size","setData","classes","clas","sport","setSport","noValidate","autoComplete","TextField","label","InputProps","style","FormControl","InputLabel","Select","labelId","event","MenuItem","variant","ok","JoinTeam","teamCode","Apiroute","pathname","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.79219e3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down.e448fd8e.svg\";","import {FETCH_SIGNUP_BEGIN\r\n    ,FETCH_SIGNUP_FAILS , FETCH_LOGIN_SUCCESS } from '../types'\r\n\r\n    const initialStateSignup = {\r\n        loading : false,\r\n        posted : false,\r\n        error : \" \"\r\n    }\r\n    \r\n const SignupReducers = (state = initialStateSignup , action) => {\r\n        switch (action.type){\r\n            case FETCH_SIGNUP_BEGIN : \r\n            return{\r\n                ...state,\r\n                loading : true,\r\n                error : \"\"\r\n            }\r\n            case FETCH_SIGNUP_FAILS : \r\n            return{\r\n                loading : false,\r\n                posted : false,\r\n                error : action.payload\r\n            }\r\n            case FETCH_LOGIN_SUCCESS : \r\n            return{\r\n                loading : false,\r\n                error : \" \",\r\n                posted : true\r\n            }\r\n            default :\r\n            return state\r\n        }\r\n    }\r\n\r\n \r\n\r\n    export default SignupReducers ","export const FETCH_LOGIN_SUCCESS = 'FETCH_SIGNIN_SUCCESS'\r\nexport const FETCH_LOGIN_FAILS = 'FETCH_SIGNIN_FAILS'\r\nexport const FETCH_LOGIN_BEGIN = 'FETCH_SIGNIN_BEGIN'\r\n\r\nexport const FETCH_SIGNUP_SUCCESS = 'FETCH_SIGNUP_SUCCESS'\r\nexport const FETCH_SIGNUP_FAILS = 'FETCH_SIGNUP_FAILS'\r\nexport const FETCH_SIGNUP_BEGIN = 'FETCH_SIGNUP_BEGIN'\r\n\r\nexport const CHATS_SUCCESS = 'CHATS_SUCCESS'\r\nexport const CHATS_FAILS = 'CHATS_FAILS'\r\nexport const CHATS_BEGIN = 'CHATS_BEGIN'\r\nexport const CHATS_ADD_OUT = 'CHATS_ADD_OUT'\r\n\r\nexport const PLAYERS_SUCCESS = 'PLAYERS_SUCCESS'\r\nexport const PLAYERS_FAILS = 'PLAYERS_FAILS'\r\nexport const PLAYERS_BEGIN = 'PLAYERS_BEGIN'\r\n\r\nexport const SPEC_PLAYERS_SUCCESS = 'SPEC_PLAYERS_SUCCESS'\r\nexport const SPEC_PLAYERS_FAILS = 'SPEC_PLAYERS_FAILS'\r\nexport const SPEC_PLAYERS_BEGIN = 'SPEC_PLAYERS_BEGIN'\r\n\r\nexport const FETCH_SIGNOUT_SUCCESS = 'FETCH_SIGNOUT_SUCCESS'\r\n\r\nexport const MESSAGING_USERS = 'MESSAGING_USERS'\r\n\r\nexport const CHATROOM_SUCCESS = 'CHATROOM_SUCCESS'\r\nexport const CHATROOM_FAILS = 'CHATROOM_FAILS'\r\nexport const CHATROOM_BEGIN = 'CHATROOM_BEGIN'\r\n","import {\r\nFETCH_LOGIN_BEGIN , FETCH_LOGIN_FAILS , FETCH_LOGIN_SUCCESS  ,FETCH_SIGNOUT_SUCCESS} from '../types'\r\n\r\nconst initialStateLogin = {\r\n    loading : false,\r\n    loggedin : false,\r\n    error : '',\r\n    user : {}\r\n}\r\n\r\nconst LoginReducers = (state = initialStateLogin , action) => {\r\n    switch (action.type){\r\n        case FETCH_LOGIN_BEGIN : \r\n        return{\r\n            ...state,\r\n            loading : true,\r\n        }\r\n        case FETCH_LOGIN_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loading : false,\r\n            loggedin : true,\r\n            error : '',\r\n            user : action.payload\r\n            }\r\n        case FETCH_LOGIN_FAILS : \r\n        return{\r\n            ...state , \r\n            loading : false,\r\n            loggedin : false,\r\n            error : action.payload\r\n        }\r\n        case FETCH_SIGNOUT_SUCCESS :\r\n            return{\r\n                ...state,\r\n                loggedin : false,\r\n                loading : false\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}\r\n\r\nexport default LoginReducers","import {CHATS_BEGIN , CHATS_FAILS , CHATS_SUCCESS , CHATS_ADD_OUT } from '../types'\r\n    \r\n    const initialState = {\r\n        loading : false,\r\n        error : '',\r\n        chats : [],\r\n        roomId : null\r\n    }\r\n    \r\n    const ChatReducers = (state = initialState , action) => {\r\n        switch (action.type){\r\n            case CHATS_BEGIN : \r\n            return{\r\n                ...state,\r\n                loading : true,\r\n            }\r\n            case CHATS_SUCCESS : \r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                error : '',\r\n                chats : action.payload\r\n                }\r\n            case CHATS_FAILS : \r\n            return{\r\n                ...state , \r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n            case CHATS_ADD_OUT : \r\n            return{\r\n                ...state,\r\n                chats : [...state.chats , action.payload]\r\n            }\r\n            default :\r\n            return state\r\n        }\r\n    }\r\n    \r\n    export default ChatReducers","import {PLAYERS_BEGIN , PLAYERS_FAILS , PLAYERS_SUCCESS } from '../types'\r\n    \r\n    const initialState = {\r\n        loading : false,\r\n        error : '',\r\n        players : []\r\n    }\r\n    \r\n    const PlayersReducers = (state = initialState , action) => {\r\n        switch (action.type){\r\n            case PLAYERS_BEGIN : \r\n            return{\r\n                ...state,\r\n                loading : true,\r\n            }\r\n            case PLAYERS_SUCCESS : \r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                error : '',\r\n                players : action.payload\r\n                }\r\n            case PLAYERS_FAILS : \r\n            return{\r\n                ...state , \r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n            default :\r\n            return state\r\n        }\r\n    }\r\n    \r\n    export default PlayersReducers","import {SPEC_PLAYERS_FAILS , SPEC_PLAYERS_SUCCESS , SPEC_PLAYERS_BEGIN } from '../types'\r\n    \r\n    const initialState = {\r\n        loading : false,\r\n        error : '',\r\n        player : {}\r\n    }\r\n    \r\n    const SPecPlayersReducers = (state = initialState , action) => {\r\n        switch (action.type){\r\n            case SPEC_PLAYERS_BEGIN : \r\n            return{\r\n                ...state,\r\n                loading : true,\r\n            }\r\n            case SPEC_PLAYERS_SUCCESS : \r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                player : action.payload\r\n                }\r\n            case SPEC_PLAYERS_FAILS : \r\n            return{\r\n                ...state , \r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n            default :\r\n            return state\r\n        }\r\n    }\r\n    \r\n    export default SPecPlayersReducers","import {MESSAGING_USERS } from '../types'\r\n    \r\n    const initialState = {\r\n        UsersId : []\r\n    }\r\n    \r\n    const MsgUserIdReducers = (state = initialState , action) => {\r\n        switch (action.type){\r\n            case MESSAGING_USERS : \r\n            return{\r\n                UsersId : [...state.UsersId , action.payload]\r\n            }\r\n           \r\n            default :\r\n            return state\r\n        }\r\n    }\r\n    \r\n    export default MsgUserIdReducers","import {CHATROOM_BEGIN , CHATROOM_SUCCESS , CHATROOM_FAILS  } from '../types'\r\n    \r\n    const initialState = {\r\n        loading : false,\r\n        error : '',\r\n        roomId : null\r\n    }\r\n    \r\n    const ChatRoomReducers = (state = initialState , action) => {\r\n        switch (action.type){\r\n            case CHATROOM_BEGIN : \r\n            return{\r\n                ...state,\r\n                loading : true,\r\n            }\r\n            case CHATROOM_SUCCESS : \r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                error : '',\r\n                roomId : action.payload\r\n                }\r\n            case CHATROOM_FAILS : \r\n            return{\r\n                ...state , \r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n            default :\r\n            return state\r\n        }\r\n    }\r\n    \r\n    export default ChatRoomReducers","import {combineReducers} from 'redux'\r\nimport SignupReducers  from './reducers/signupReducers';\r\nimport LoginReducers from './reducers/loginReducers';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport ChatReducers from './reducers/chatsReducers';\r\nimport PlayersReducers from './reducers/playersReducers';\r\nimport SPecPlayersReducers from './reducers/specificPlayerReducer';\r\nimport MsgUserIdReducers from './reducers/messageUserId'; \r\nimport ChatRoomReducers from './reducers/chatRoomReducers';\r\n\r\n const rootReducer = combineReducers({\r\n    signup : SignupReducers,\r\n    login : LoginReducers,\r\n    chats : ChatReducers,\r\n    players : PlayersReducers,\r\n    specificPlayer : SPecPlayersReducers,\r\n    msgUserIds : MsgUserIdReducers,\r\n    chatRoom : ChatRoomReducers\r\n})\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\n    whitelist : ['login']\r\n}\r\n\r\nexport default persistReducer(persistConfig , rootReducer);","import {createStore , applyMiddleware} from 'redux'\r\nimport thunk from \"redux-thunk\";\r\nimport logger from 'redux-logger'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport combined from './rootreduers';\r\nimport {persistStore} from 'redux-persist'\r\n\r\nexport  const store = createStore(\r\n    combined,\r\n    composeWithDevTools(\r\n        applyMiddleware(logger , thunk)\r\n    ) \r\n)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\n","import React , {useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux'\r\nimport search from '../images/search.svg'\r\n\r\nconst Header = () =>{\r\n\r\n    const {loggedin , username} = useSelector(state => ({\r\n        loggedin : state.login.loggedin,\r\n        username : state.login.username\r\n    }))\r\n\r\n    useEffect (() => {\r\n        const LoginAction = async() => {\r\n            await fetch('/api/login/session')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            if(!data.token){\r\n                localStorage.clear()\r\n            }\r\n            })\r\n\r\n            let header = await document.querySelector('#header')\r\n            \r\n            window.onscroll = () => {\r\n            \r\n                var top = window.scrollY\r\n                if(top >= 10){\r\n                    header.classList.add('active')\r\n                }else{\r\n                    header.classList.remove('active')\r\n                }\r\n            }\r\n        }\r\n        LoginAction()\r\n    } , [])\r\n    \r\n        return(\r\n            <div className = \"header\" id = \"header\">\r\n                <div className = \"header_inside_div\">\r\n                \r\n                    <div className = \"name_logo\">\r\n                            <div className = \"logo\">\r\n\r\n                            </div>\r\n                            <Link to = \"/\" className = \"site_name\">\r\n                                PLIFTY\r\n                            </Link>\r\n                    </div>\r\n                 \r\n                    {loggedin ? (\r\n                        <div className = \"page_links\">\r\n                        <div className = \"search_header\">\r\n                            <input type = \"text\" placeholder = \"Search\" />\r\n                            <div className = \"search_bar\">\r\n                                <img src = {search} alt = \"\" />\r\n                            </div>\r\n                        </div>\r\n                            <Link className = \"link\" to = \"/tournaments\">\r\n                                Tournaments\r\n                            </Link>\r\n                            <Link to = \"/players\" className = \"link\">\r\n                                Players\r\n                            </Link>\r\n                            <Link to = \"/messages\" className = \"link\">\r\n                                Messages\r\n                            </Link>\r\n                            <Link className = \"link\" to = \"/teams\">\r\n                                Teams\r\n                            </Link>\r\n                            \r\n                    </div>\r\n                    ) : (\r\n                        <div className = \"login_signup_links\">\r\n                       \r\n                            <div className = \"link\" onClick = {() => {\r\n                                window.location.href = '/login'\r\n                            }}>\r\n                                Login\r\n                            </div>\r\n                            <div className = \"link\"  onClick = {() => {\r\n                                window.location.href = '/signup'\r\n                            }}>\r\n                                SignUp\r\n                            </div>\r\n                            <div className = \"link\">\r\n                                About Us    \r\n                            </div>\r\n                        \r\n                    </div>\r\n                    )}\r\n                 \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Header;\r\n","import {FETCH_SIGNUP_BEGIN\r\n    ,FETCH_SIGNUP_FAILS , FETCH_SIGNUP_SUCCESS \r\n    ,FETCH_LOGIN_BEGIN , FETCH_LOGIN_FAILS , FETCH_LOGIN_SUCCESS} from '../types'\r\n    \r\n    export const signupBegin = () => {\r\n        return{\r\n            type : FETCH_SIGNUP_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const signupSuccess = () => {\r\n        return{\r\n            type : FETCH_SIGNUP_SUCCESS,\r\n        }\r\n    }\r\n    \r\n    export const signupFail = (error) => {\r\n        return{\r\n            type : FETCH_SIGNUP_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n    \r\n    export const CreateUser = (data) => {\r\n        return dispatch => {\r\n            dispatch(signupBegin())\r\n            return fetch('/api/register' , {\r\n                method : \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.err){\r\n                    dispatch(signupFail(data.err))\r\n                }\r\n                else if(data){\r\n                    dispatch(signupSuccess());\r\n                }\r\n            }).catch((err) => dispatch(signupFail(err)));\r\n        }\r\n    }\r\n    \r\n    export const loginBegin = () => {\r\n        return{\r\n            type : FETCH_LOGIN_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const loginSuccess = (data) => {\r\n        return{\r\n            type : FETCH_LOGIN_SUCCESS,\r\n            payload : data\r\n        }\r\n    }\r\n    \r\n    export const loginFail = (error) => {\r\n        return{\r\n            type : FETCH_LOGIN_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n    \r\n    \r\n    export const login = (data) => {\r\n        return dispatch => {\r\n            dispatch(loginBegin())\r\n            return fetch('/api/login' , {\r\n                method : \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                if(data.error){\r\n                    dispatch(loginFail(data.error));\r\n                }\r\n                else if(data){\r\n                    dispatch(loginSuccess(data));\r\n                }\r\n            }).catch((err) => dispatch(loginFail(err)));\r\n        }\r\n    }","import {\r\n    CHATS_BEGIN\r\n    ,CHATS_FAILS , CHATS_SUCCESS , CHATS_ADD_OUT,\r\n    CHATROOM_SUCCESS , CHATROOM_BEGIN , CHATROOM_FAILS\r\n } from '../types'\r\n    \r\n    export const chatBegin = () => {\r\n        return{\r\n            type : CHATS_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const chatSuccess = (chats) => {\r\n        return{\r\n            type : CHATS_SUCCESS,\r\n            payload : chats\r\n        }\r\n    }\r\n    \r\n    export const chatFail = (error) => {\r\n        return{\r\n            type : CHATS_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n\r\n    export const Addchat = (chat) => {\r\n        return{\r\n            type : CHATS_ADD_OUT,\r\n            payload : chat\r\n        }\r\n    }\r\n    \r\n    export const GetChats = (id) => {\r\n        return dispatch => {\r\n            dispatch(chatBegin())\r\n            return fetch(`/api/chat?roomId=${id}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.error){\r\n                    dispatch(chatFail(data.error))\r\n                }\r\n                else if(data){\r\n                    dispatch(chatSuccess(data));\r\n                }\r\n            }).catch((err) => dispatch(chatFail(err)));\r\n        }\r\n    }\r\n\r\n    export const AddChatOUt = (chat) => {\r\n        return dispatch => {\r\n            dispatch(Addchat(chat))\r\n        }\r\n    }\r\n\r\n    export const chatRoomBegin = () => {\r\n        return{\r\n            type : CHATS_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const chatRoomSuccess = (id) => {\r\n        return{\r\n            type : CHATS_SUCCESS,\r\n            payload : id\r\n        }\r\n    }\r\n    \r\n    export const chatRoomFail = (error) => {\r\n        return{\r\n            type : CHATS_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n\r\n    export const GetRoomId = (userId , playerId) => {\r\n        return dispatch => {\r\n            dispatch(chatRoomBegin())\r\n            return  fetch(`/api/chat/roomExist?id1=${playerId}&id2=${userId}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.error){\r\n                    dispatch(chatRoomFail(data.error))\r\n                }else if(data){\r\n                    dispatch(chatRoomSuccess(data))\r\n                }\r\n            }).catch((err) => dispatch(chatRoomFail(err)));\r\n        }\r\n    }","import {\r\n        PLAYERS_BEGIN,PLAYERS_FAILS , PLAYERS_SUCCESS,\r\n        SPEC_PLAYERS_BEGIN , SPEC_PLAYERS_FAILS , SPEC_PLAYERS_SUCCESS\r\n      } \r\n    from '../types'\r\n    export const playersBegin = () => {\r\n        return{\r\n            type : PLAYERS_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const playersSuccess = (players) => {\r\n        return{\r\n            type : PLAYERS_SUCCESS,\r\n            payload : players\r\n        }\r\n    }\r\n    \r\n    export const playersFail = (error) => {\r\n        return{\r\n            type : PLAYERS_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n    \r\n    export const GetPlayers = () => {\r\n        return dispatch => {\r\n            dispatch(playersBegin())\r\n            return fetch('/api/users/all')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.error){\r\n                    dispatch(playersFail(data.error))\r\n                }\r\n                else if(data){\r\n                    dispatch(playersSuccess(data));\r\n                }\r\n            }).catch((err) => dispatch(playersFail(err)));\r\n        }\r\n    }   \r\n\r\n    export const SpecplayersBegin = () => {\r\n        return{\r\n            type : SPEC_PLAYERS_BEGIN\r\n        }\r\n    }\r\n    \r\n    export const SpecplayersSuccess = (player) => {\r\n        return{\r\n            type : SPEC_PLAYERS_SUCCESS,\r\n            payload : player\r\n        }\r\n    }\r\n    \r\n    export const SpecplayersFail = (error) => {\r\n        return{\r\n            type : SPEC_PLAYERS_FAILS,\r\n            payload : error\r\n        }\r\n    }\r\n\r\n    export const GetSpecific = (id) => {\r\n        return dispatch => {\r\n            dispatch(SpecplayersBegin())\r\n            return fetch(`/api/users/specific?id=${id}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.error){\r\n                    dispatch(SpecplayersFail(data.error))\r\n                }\r\n                else if(data){\r\n                    dispatch(SpecplayersSuccess(data));\r\n                }\r\n            }).catch((err) => dispatch(playersFail(err)));\r\n        }\r\n    }","import React from 'react';\r\nimport profilePic from '../images/propic.svg';\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nimport {SignOut} from '../redux'\r\n\r\nconst ProfileCard = () => {\r\n\r\n    const {error} = useSelector(state => ({\r\n        error : state.signup.error\r\n    }))\r\n    const dispatch = useDispatch()\r\n\r\n        return(\r\n            <div className = \"profile_card\">\r\n                <div className = \"player_img\">\r\n                    <img src = {profilePic} alt = \" \" />\r\n                </div>\r\n                <div className = \"player_name\">\r\n                    Nimit Wadhwa\r\n                </div>\r\n                <div className = \"profile_details_pcard\">\r\n                    <div className = \"det_row\">\r\n                        <div className = \"field\">\r\n                            Squad Size\r\n                        </div>\r\n                        <div className = \"hmany\">\r\n                            451\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"det_row\">\r\n                        <div className = \"field\">\r\n                            Matches\r\n                        </div>\r\n                        <div className = \"hmany\">\r\n                            50\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"sign_out_pcard\" onClick = {() => dispatch(SignOut())}>\r\n                    Sign Out\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default ProfileCard","import {FETCH_SIGNOUT_SUCCESS} from '../types'\r\n\r\n import {loginBegin , loginFail} from './login_signup'\r\n\r\nexport const outSuccess = () => {\r\n    return{\r\n        type : FETCH_SIGNOUT_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nexport const SignOut = () => {\r\n    return dispatch => {\r\n        dispatch(loginBegin())\r\n        return fetch('/api/login' , {\r\n            method : \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                if(data.error){\r\n                    dispatch(loginFail())\r\n                }\r\n                else if(data){\r\n                    dispatch(outSuccess());\r\n                }\r\n        }).catch((err) => dispatch(loginFail(err)));\r\n    }\r\n}","import React , {useState} from 'react';\r\nimport propic from '../images/propic.svg';\r\nimport versus from '../images/versus.svg'\r\n\r\nfunction Feeds(){\r\n        return(\r\n            <div className = \"feeds\">\r\n                <div className = \"feed_inner_body\">\r\n                    <div className = \"feed_by\">\r\n                        <div className = \"player_img_feed\">\r\n                            <img src = {propic} />\r\n                        </div>\r\n                        <div className = \"player_name_feed\">\r\n                            <div className = \"name\">John Smith</div>\r\n                            <div className = \"time\">2 days</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"match_type_feed\">\r\n                        Cricket Match ( 2 Matches )\r\n                    </div>\r\n                    <div className = \"match_opponents_pic\">\r\n                        <div className = \"challenger\">\r\n                            <img src = {propic} />\r\n                        </div>\r\n                        <div className = \"vs_logo\">\r\n                            <img src = {versus} />\r\n                        </div>\r\n                        <div className = \"challenger\">\r\n                            <img src = {propic} />\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"match_fixed_details\">\r\n                        <div className = \"match_length\">\r\n                            <div className = \"head\">Overs :</div>\r\n                            <div className = \"val\">5</div>\r\n                        </div>\r\n                        <div className = \"match_veneu\">\r\n                            <div className = \"head\">Venue :</div>\r\n                            <div className = \"val\">High Ground,Nilokheri</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"match_fixed_details\">\r\n                        <div className = \"match_time\">\r\n                            <div className = \"head\">Time :</div>\r\n                            <div className = \"val\">6:00 PM</div>\r\n                        </div>\r\n                        <div className = \"match_date\">\r\n                            <div className = \"head\">Date :</div>\r\n                            <div className = \"val\">5 Sept , 2020</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"player_polls\">\r\n                        <div className = \"challenger_pole\">\r\n                            <div className = \"img\">\r\n                                <img src = {propic} />\r\n                            </div>\r\n                            <div className = \"pole_er\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"challenger_pole\">\r\n                            <div className = \"img\">\r\n                                <img src = {propic} />\r\n                            </div>\r\n                            <div className = \"pole_ee\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"total_votes\">\r\n                            Total - 541 Votes\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"opponents_poles_option\">\r\n                    <div className = \"player_name_er\">John Smith</div>\r\n                    <div className = \"player_name\">Tommy Shelby</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Feeds","import React , {useState} from 'react';\r\nimport propic from '../images/propic.svg'\r\n\r\nfunction Messages(){\r\n    const arr = [1,1,1,1,1,1,1,1]\r\n        return(\r\n            <div className = \"messages\">\r\n                <div className = \"message_heading\">\r\n                    Messages\r\n                </div>\r\n                <div className = \"messages_lis\">\r\n                    {arr.map(e => {\r\n                        return(\r\n                            <div className = \"message_row\">\r\n                                <div className = \"msg_img\">\r\n                                    <img src = {propic} />\r\n                                </div>\r\n                                <div className = \"msg_div\">\r\n                                    <div className = \"msg_sender\">\r\n                                        Virat Kohli\r\n                                    </div>\r\n                                    <div className = \"msg_body\">\r\n                                        aja bhai kl khelenge match\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Messages","import React , {useState} from 'react';\r\nimport propic from '../images/propic.svg'\r\n\r\nfunction RecentUpdates(props){\r\n   const arr = [1,1,1]\r\n        return(\r\n            <div className = \"recent_updates\">\r\n                {arr.map(e => {\r\n                    return(\r\n                    <div className = \"update_text\">\r\n                        <div className = \"text\">\r\n                        <div className = \"img\">\r\n                            <img src = {propic} />\r\n                        </div>\r\n                        <div>\r\n                            Lorem Ipsum has challanged you play\r\n                            one on one match with him\r\n                        </div>\r\n                        </div>\r\n                        <div className = \"time\">2 minutes ago</div>\r\n                    </div>\r\n                    )\r\n                })}\r\n                <div className = \"see_all_upd\">\r\n                    See all\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default RecentUpdates;","import React , {useState , useEffect} from 'react';\r\nimport ProfileCard from '../containers/profileCard';\r\nimport Feeds from '../containers/feeds';\r\nimport Messages from '../containers/messages';\r\nimport RecentUpdates from '../containers/recent_updates';\r\nimport ChatTabs from '../containers/chat_tabs'\r\n\r\nfunction Home(){\r\n  \r\n  const arr = [1,1,1,1,11,1,11,1]\r\n  useEffect( () => {\r\n\r\n    fetch('/api/login/session')\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if(!data.token){\r\n        localStorage.clear()\r\n      }\r\n    } )\r\n  } ,)\r\n\r\n\r\n    return(\r\n      <div className = \"home\">\r\n\r\n          <div className = \"lef_home_pro_up\">\r\n            <ProfileCard />\r\n            <RecentUpdates />\r\n          </div>\r\n          <div className = \"home_feeds\">\r\n            {/* <div className = \"acc_hosting\">\r\n              <button>\r\n                Create Team\r\n              </button>\r\n              <button>\r\n                Host Tournament\r\n              </button>\r\n            </div> */}\r\n          {arr.map(e => {\r\n            return(\r\n              <Feeds />\r\n            )\r\n          })}\r\n          </div>\r\n          <Messages />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default Home;\r\n\r\n","import React , {useState} from 'react'\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nimport {login} from '../redux'\r\n\r\nconst Login = () => {\r\n\r\n    const [inv_user , setInv_user] = useState(false)\r\n    const [inv_pass , setInv_pass] = useState(false)\r\n    const [logindata , setLogindata] = useState({username : \" \" , password : \" \"})\r\n    const {error , loggedin , loading} = useSelector(state => ({\r\n        error : state.login.error,\r\n        loggedin : state.login.loggedin,\r\n        loading : state.login.loading\r\n    }))\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogin = async() => {\r\n       \r\n        setInv_pass(false)\r\n        setInv_user(false)\r\n\r\n        await dispatch(login(logindata))\r\n        await IsUser()\r\n    }\r\n\r\n    const IsUser = () => {\r\n        \r\n         if(error.toString().indexOf('username') != -1){\r\n            setInv_user(true)\r\n        }\r\n        else if(error.toString().indexOf('password') != -1){\r\n            setInv_pass(true)\r\n        }else{\r\n            window.location.href = '/'\r\n        }\r\n    }\r\n\r\n        return(\r\n            <div className = \"login_page\">\r\n                <div className = \"site_name_lp\" onClick = {() => {\r\n                    window.location.href = \"/\"\r\n                }}>\r\n                    <div className = \"icon\"></div>\r\n                    <div className = \"name\">Plifty</div>\r\n                </div>\r\n                <div className = \"login_heading\">\r\n                    LOGIN\r\n                </div>\r\n                <div className = \"input_feild_lp input_bar_uni\">\r\n                    <label for = \"username\">Email</label>\r\n                    <input type = \"email\" name = \"username\"  value = {logindata.username}\r\n                     onChange = {e => setLogindata({...logindata , username : e.target.value})} />\r\n                    {inv_user && (\r\n                        <div className = \"lower_alert\">\r\n                            {error}\r\n                        </div>\r\n                        )}\r\n                </div>\r\n                <div className = \"input_feild_lp input_bar_uni\">\r\n                    <label for = \"password\">Password</label>\r\n                    <input type = \"password\" name = \"password\" id = \"password_lp\" value = {logindata.password}\r\n                     onChange = {e => setLogindata({...logindata , password : e.target.value})} />\r\n                    {inv_pass && (\r\n                        <div className = \"lower_alert\">\r\n                            {error}\r\n                        </div>\r\n                        )}\r\n                </div>\r\n                <div className = \"login_button uni_button_plifty\">\r\n                    <button onClick = {handleLogin}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n                <div className = \"signup_route\" >\r\n                    New to Plifty ? <a onClick = {() => {\r\n                    window.location.href = \"/signup\"\r\n                }}>Sign Up</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Login;","import React , {useState} from 'react';\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nimport {CreateUser} from '../redux'\r\nimport Button from '../components/Button'\r\n\r\n const Signup = () => {\r\n    const [inv_email , setInv_email] = useState(false)\r\n    const [inv_phone , setInv_phone] = useState(false)\r\n    const [match_pass , setMatch_pass] = useState(true)\r\n    const [userData , setUserData] = useState({f_name : \" \" , l_name : \" \" ,\r\n    email : \" \" , password : \" \" , phone_num : \" \" , type : \" \"})\r\n    const err = useSelector(state => state.signup.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const ValidUsers = () => {\r\n        if(typeof(err) == 'string'){\r\n            if(err.indexOf('phone') != -1){   \r\n                setInv_phone(true)\r\n            }\r\n            else if(err.indexOf('email') != -1){\r\n                setInv_email(true)\r\n            }\r\n        }\r\n\r\n        window.location.href = '/'\r\n    }\r\n\r\n    const Signup = async() => {\r\n\r\n        if(document.getElementById('password').value !== document.getElementById('cpassword').value){\r\n            setMatch_pass(false)\r\n        }else{\r\n           setMatch_pass(true)\r\n\r\n         \r\n\r\n        await dispatch(CreateUser(userData))    \r\n\r\n        setInv_email(false)\r\n        setInv_phone(false)\r\n    \r\n       await ValidUsers()\r\n        \r\n    }\r\n    }\r\n\r\n        return(\r\n            <div className = \"signup_page\">\r\n                <div className = \"site_name_sp\" onClick = {() => {\r\n                    window.location.href = \"/\"\r\n                }}>\r\n                    <div className = \"icon\"></div>\r\n                    <div className = \"name\">Plifty</div>\r\n                </div>\r\n                <div className = \"sign_up_cont\">\r\n                    <div className = \"sign_up_heading\">Sign Up</div>\r\n                    <div className = \"signup_details\">\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"f_name\">First Name</label>\r\n                                <input id = \"f_name\" name = \"f_name\" value = {userData.f_name} onChange = {\r\n                                    e => setUserData({...userData , f_name : e.target.value})\r\n                                }/>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"l_name\">Last Name</label>\r\n                                <input id = \"l_name\" name = \"l_name\" value = {userData.l_name} onChange = {\r\n                                    e => setUserData({...userData , l_name : e.target.value})\r\n                                } />\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"icon\"></div>\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"email\">E-Mail</label>\r\n                                <input id = \"email\" name = \"email\" type = \"email\" value = {userData.email} onChange = {\r\n                                    e => setUserData({...userData , email : e.target.value})\r\n                                } />\r\n                                {inv_email && (\r\n                                    <div className = \"lower_alert\">\r\n                                        {err}\r\n                                    </div>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"icon\"></div>\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"phone_num\">Phone Number</label>\r\n                                <input id = \"phone_num\" name = \"phone_num\" value = {userData.phone_num} onChange = {\r\n                                    e => setUserData({...userData , phone_num : e.target.value})\r\n                                } />\r\n                                {inv_phone && (\r\n                                    <div className = \"lower_alert\">\r\n                                        {typeof(err) == 'string' && err}\r\n                                    </div>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"icon\"></div>\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"password\">Password</label>\r\n                                <input id = \"password\" name = \"password\" type = \"password\" value = {userData.password} onChange = {\r\n                                    e => setUserData({...userData , password : e.target.value})\r\n                                } />\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"input_feilds_sp\">\r\n                            <div className = \"icon\"></div>\r\n                            <div className = \"input_bar\">\r\n                                <label for = \"password\">Confirm Password</label>\r\n                                <input id = \"cpassword\" name = \"password\" type = \"password\" />\r\n                            </div>\r\n                            {!match_pass && (\r\n                                <div className = \"lower_alert\">\r\n                                    password does not match\r\n                                </div>\r\n                                )}\r\n                            \r\n                        </div>\r\n                        {/* <div className = \"continue_cbox\">\r\n                            <div className = \"cont_text\">Continue As</div>\r\n                            <div className = \"checkboxes\">\r\n                                <label for = \"player\">Player</label>\r\n                                <input type = \"radio\" name = \"player\" id = \"player_cb\" />\r\n\r\n                                <label for = \"player\">Expert</label>\r\n                                <input type = \"radio\" name = \"player\" id = \"expert_cb\" />\r\n                            </div>\r\n                        </div> */}\r\n                        <div className = \"submit_btn_signup uni_button_plifty\">\r\n                            <button onClick = {Signup}>Sign Up</button>\r\n                        </div>\r\n                        <div className = \"login_route\">\r\n                            Have an Account ? \r\n                            <a onClick = {() => {\r\n                                window.location.href = \"/login\"\r\n                            }}> Login</a>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default Signup;","import React from 'react'\r\nimport io from 'socket.io-client';\r\nimport {connect} from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport moment from 'moment'\r\nimport {GetChats , AddChatOUt} from '../redux'\r\n\r\nclass Messages extends React.Component{\r\n    state = {\r\n        chatmsg : \"\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        let server = \"http://localhost:6878\"\r\n\r\n        this.socket = io(server);\r\n\r\n        this.props.GetChats();\r\n\r\n        this.socket.on('Output Chat Message' , msg => {\r\n           this.props.AddChatOUt(msg)\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            chatmsg : e.target.value\r\n        })\r\n    }\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let userId = this.props.user.id\r\n        let username = this.props.user.f_name\r\n        let type = \"image\"\r\n        let nowtime = moment()\r\n        let chatmsg = this.state.chatmsg\r\n\r\n        this.socket.emit('Input Chat Message' , {\r\n            userId,\r\n            username,\r\n            type,\r\n            nowtime,\r\n            chatmsg\r\n        })\r\n\r\n        this.setState({chatmsg : \"\"})\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className = \"messages_page\">\r\n\r\n                <input \r\n                type = \"text\" \r\n                placeholder = \"Enter your message\" \r\n                value = {this.state.chatmsg}\r\n                onChange = {this.handleChange}\r\n                />\r\n                <button onClick = {this.submitHandler}>Send</button>\r\n\r\n                <div className = \"messages_from_eother\">\r\n                    {this.props.chats.map((chat) => {\r\n                        return(\r\n                            <div className = \"chat_f_in_box\">\r\n                                {chat.Message}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        user : state.login.user,\r\n        chats : state.chats.chats\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        GetChats : bindActionCreators(GetChats , dispatch),\r\n        AddChatOUt : bindActionCreators(AddChatOUt , dispatch)\r\n      };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(Messages)","import React , {useEffect} from 'react';\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nimport {GetPlayers , AddMsgUser} from '../redux'\r\n\r\nconst PlayerCard = () =>{\r\n\r\n    const {error , players} = useSelector(state => ({\r\n        error : state.players.error ,\r\n        players : state.players.players\r\n    }))\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() =>{\r\n        dispatch(GetPlayers())\r\n    } , [])\r\n\r\n    // const CreateNewRoom = () => {\r\n    //     let data = {\r\n    //         userId : this.props.user.Id,\r\n    //         playerId : this.props.playerId\r\n    //     }\r\n    //     fetch(`/api/chat/room?id1=${this.props.player.Id}&id2=${this.props.user.Id}` , {\r\n    //         method : 'post',\r\n    //         headers : {\r\n    //             \"Content-Type\" : \"application/json\"\r\n    //         },\r\n    //         body : JSON.stringify(data)\r\n    //     }).then((res) => res.json)\r\n    // }\r\n\r\n        return(\r\n            players.map((player) => {\r\n                return(\r\n                    <div className = \"player_card\">\r\n                    <div className = \"player_pic\"></div>\r\n                    <div className = \"name\">\r\n                        {player.FirstName} {' '} {player.LastName}\r\n                    </div>\r\n                    <div className = \"msg_btn\" onClick = {() => {\r\n                        dispatch(AddMsgUser(player.Id))\r\n                    }} >\r\n                        Message\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n           \r\n        )\r\n    }\r\n\r\nexport default PlayerCard","import {\r\n        MESSAGING_USERS\r\n        } from '../types'\r\n\r\nexport const AddMsgUser = (id) => {\r\n    return{\r\n        type : MESSAGING_USERS,\r\n        payload : id\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport PlayerCard from '../containers/player_card'\r\n\r\nfunction Players(){\r\n    return(\r\n        <div className = \"player_page\">\r\n            <PlayerCard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Players","import React , {useState , useEffect} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nconst Tournament = (props) => {\r\n\r\n    const Tourn_Cat = props.Tourn_Cat\r\n    useEffect(() => {\r\n     \r\n    })\r\n    return(\r\n        <div className = \"tourna_page\">\r\n            <div className = \"tourna_op\" id = \"tourna_op\">\r\n                <NavLink \r\n                className = \"tourna_op_name\"\r\n                activeClassName = \"tourna_op_name--active\"\r\n                to = \"/tournaments\"\r\n                exact\r\n                >\r\n                    Active Tournaments\r\n                </NavLink>\r\n                <NavLink \r\n                className = \"tourna_op_name\"\r\n                activeClassName = \"tourna_op_name--active\"\r\n                to = \"/tournaments/past\"\r\n                >\r\n                    Past Tournaments\r\n                </NavLink>\r\n                <NavLink \r\n                className = \"tourna_op_name\"\r\n                activeClassName = \"tourna_op_name--active\"\r\n                to = \"/tournaments/hosted\"\r\n                >\r\n                    Hosted Tournaments\r\n                </NavLink>\r\n                <NavLink \r\n                className = \"tourna_op_name\"\r\n                activeClassName = \"tourna_op_name--active\"\r\n                to = \"/tournaments/matches\"\r\n                >\r\n                    Matches\r\n                </NavLink>\r\n            </div>\r\n            <Tourn_Cat />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tournament;","import React , {useEffect, useState} from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport down from '../images/down.svg'\r\n\r\nconst Hosted_Tourna = () => {\r\n    const [Tdata , setTdata] = useState({tourName : \"\" , venue : \"\" , description : \"\"})\r\n    const [Tourna , setTourna] = useState([])\r\n\r\n    const GetTourna = () => {\r\n        fetch('/api/tourna').then(res => res.json())\r\n        .then((data) => {\r\n            if(data.error){\r\n                alert('error occured in getting')\r\n            }\r\n            else if(data){\r\n                setTourna(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStatus = (id) => {\r\n        fetch('/api/tourna/active' , {\r\n            method : \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({Id : id})\r\n        }).then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.error){\r\n                alert('error occured')\r\n            }else if(data){\r\n                alert('changed')\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetTourna()\r\n    },[])\r\n\r\n    const HandleCreate = () => {\r\n    fetch('/api/tourna' , {\r\n        method : \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(Tdata)\r\n    }).then((res) => res.json())\r\n    .then((data) => {\r\n        if(data.error){\r\n            alert('error occured')\r\n        }else if(data){\r\n            GetTourna()\r\n        }\r\n    })\r\n    }\r\n    return(\r\n        <div className = \"hosted_tourna\">\r\n            <div className = \"hosted_empty\">\r\n                    <span className = \"msg\">\r\n                        Host Your Own Tournament\r\n                    </span>\r\n                    <Popup\r\n                        trigger={<button className=\"button\"> Host One </button>}\r\n                        modal\r\n                        nested\r\n                     >\r\n                        {close => (\r\n                        <div className=\"modal\">\r\n                            <button className=\"close\" onClick={close}>\r\n                            &times;\r\n                            </button>\r\n                            <div className=\"header\"> Modal Title </div>\r\n                            <div className=\"content\">\r\n                                <input placeholder = \"Name\" type = \"text\" onChange = {(e) => {\r\n                                    setTdata({...Tdata , tourName : e.target.value})\r\n                                }} />\r\n                              \r\n                                <input placeholder = \"Venue\" type = \"text\" onChange = {(e) => {\r\n                                    setTdata({...Tdata , venue : e.target.value})\r\n                                }}  />\r\n                                <textarea placeholder = \"Description\" onChange = {(e) => {\r\n                                    setTdata({...Tdata , description : e.target.value})\r\n                                }}  />\r\n                            </div>\r\n                            <div className=\"actions\">\r\n                            <button\r\n                                className=\"button\"\r\n                                onClick={() => {\r\n                                console.log('modal closed ');\r\n                                close();\r\n                                HandleCreate()\r\n                                }}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                    </Popup>\r\n                </div>\r\n                {Tourna.length > 0 &&\r\n                <div className = \"hosted_tourna_list\">\r\n                    <div className = \"tourna_det_slide head_slide\">\r\n                        <div className = \"t_name\">\r\n                            Name\r\n                        </div>\r\n                        <div className = \"t_venue\">\r\n                            Venue\r\n                        </div>\r\n                        <div className = \"t_des\">\r\n                            Description\r\n                        </div>\r\n                        <div className = \"t_status\">\r\n                            Status\r\n                        </div>\r\n                    </div>\r\n                    {Tourna.map((t , i) => {\r\n                        return(\r\n                            <div className = \"tourna_det_slide\">\r\n                                <div className = \"t_name\">\r\n                                    {t.TourName}\r\n                                </div>\r\n                                <div className = \"t_venue\">\r\n                                    {t.Venue}\r\n                                </div>\r\n                                <div className = \"t_des\">\r\n                                    {t.Description}\r\n                                </div>\r\n                                <div className = \"t_status\">\r\n                                    <select defaultValue = \"open\" onChange = {() => handleStatus(t.Id)}>\r\n                                        <option value = \"open\" >open</option>\r\n                                        <option value = \"close\">close</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hosted_Tourna;","import React , {useEffect , useState} from 'react'\r\n\r\nconst Active_Tourna = () => {\r\n    const [Tourna , setTourna] = useState([])\r\n\r\n    const GetTourna = () => {\r\n        fetch('/api/tourna/active_tourna').then(res => res.json())\r\n        .then((data) => {\r\n            if(data.error){\r\n                alert('error occured in getting')\r\n            }\r\n            else if(data){\r\n                setTourna(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleParti = (id) => {\r\n        fetch('/api/tourna/participate' , {\r\n            method : \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({tourId : id})\r\n        }).then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.error){\r\n                alert('error occured')\r\n            }else{\r\n                alert('participated')\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetTourna()\r\n    } , [])\r\n    return(\r\n        <div className = \"hosted_tourna\">\r\n             <div className = \"hosted_tourna_list\">\r\n                    <div className = \"tourna_det_slide head_slide\">\r\n                        <div className = \"t_name\">\r\n                            Name\r\n                        </div>\r\n                        <div className = \"t_venue\">\r\n                            Venue\r\n                        </div>\r\n                        <div className = \"t_des\">\r\n                            Description\r\n                        </div>\r\n                        <div className = \"partic_btn\">\r\n\r\n                        </div>\r\n                    </div>\r\n                    {Tourna.map((t , i) => {\r\n                        return(\r\n                            <div className = \"tourna_det_slide\">\r\n                                <div className = \"t_name\">\r\n                                    {t.TourName}\r\n                                </div>\r\n                                <div className = \"t_venue\">\r\n                                    {t.Venue}\r\n                                </div>\r\n                                <div className = \"t_des\">\r\n                                    {t.Description}\r\n                                </div>\r\n                                <div className = \"partic_btn\">\r\n                                    <button >\r\n                                        participate\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Active_Tourna;","import React from 'react'\r\n\r\nconst Past_Tourna = () => {\r\n    return(\r\n        <div className = \"hosted_tourna\">\r\n                Its Past \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Past_Tourna;","import React from 'react'\r\n\r\nconst Matches_Tourna = () => {\r\n    return(\r\n        <div className = \"hosted_tourna\">\r\n                Its Matches \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Matches_Tourna;","import React, { useEffect , useState } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Teams = () => {\r\n    const [teams , setTeams] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('/api/team')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                setTeams(data)\r\n        })\r\n    } , [])\r\n    return( \r\n        <div className = \"teams_page\">\r\n            <NavLink \r\n            className = \"create_team_btn\"\r\n            to = \"/teams/create_team\"\r\n            >\r\n                <button>\r\n                    + Create Team \r\n                </button>\r\n            </NavLink>\r\n            <NavLink \r\n            className = \"create_team_btn\"\r\n            to = \"/teams/join_team\"\r\n            >\r\n                <button>\r\n                    + Join Team \r\n                </button>\r\n            </NavLink>\r\n            <div className = \"teams_cont_det\">\r\n                <div className = \"sr_id\">S No.</div>\r\n                <div className = \"team_name\">Name</div>\r\n                <div className = \"team_field\">Field</div>\r\n                <div className = \"team_size\">Size</div>\r\n                <div className = \"team_link\">Team Code</div>\r\n            </div>\r\n            {teams.map((team) => {\r\n                return (\r\n                    <div className = \"teams_cont_det_map\">\r\n                        <div className = \"sr_id\">{team.Id}.</div>\r\n                        <div className = \"team_name\">{team.TeamName}</div>\r\n                        <div className = \"team_field\">{team.TeamField}</div>\r\n                        <div className = \"team_size\">{team.TeamSize}</div>\r\n                        <div className = \"team_link\">{team.TeamCode}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}    \r\n\r\nexport default Teams","import React , {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '250px',\r\n          },\r\n       '& label' : {\r\n        color : 'rgb(201, 201, 201)'\r\n       },\r\n       \r\n       '& label.Mui-focused': {\r\n        color: '#FEA001',\r\n      },\r\n       '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#FEA001',\r\n        color : 'white'\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color : 'white'\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n        color : 'white'\r\n      },\r\n  \r\n}\r\n  }));\r\n  \r\n  const styles = makeStyles((theme) => ({\r\n    formControl: {\r\n      color : 'white',\r\n      marginBottom : '10px'\r\n    },\r\n    select : {\r\n        color : 'white',\r\n        textAlign : 'left'\r\n    }\r\n  }));\r\n\r\n\r\nconst CreateTeam = () => {\r\n    const [data , setData] = useState({Tname : \"\" , field : \"\" , size : \"\"})\r\n    const classes = useStyles();\r\n    const clas = styles();\r\n    const [sport , setSport] = useState('')\r\n    const handleChange = (event) => {\r\n        setSport(event.target.value);\r\n        setData({...data , field : event.target.value})\r\n      };\r\n\r\n      const handleCreate = () => {\r\n            fetch('/api/team' , {\r\n                method : 'post',\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(data)\r\n            }).then((res) => {\r\n                if(res.ok){\r\n                    window.location.href = \"/teams\"\r\n                }else{\r\n                    alert('error occur')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div className = \"create_team_page\">\r\n            <div className = \"create_team_form\">\r\n                <div className = \"sub_head\">\r\n                Create Team \r\n                </div>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Team Name\" \r\n                    InputProps = {{\r\n                        style : {\r\n                            color : 'white',\r\n                            marginBottom : '10px'\r\n                        }\r\n                    }}\r\n                    onChange = {(e) => setData({...data ,Tname : e.target.value}) }\r\n                        />\r\n                        <FormControl className={clas.formControl} >\r\n                            <InputLabel id=\"demo-simple-select-label\">Sport</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={sport}\r\n                            onChange={handleChange}\r\n                            className = {clas.select}\r\n\r\n                            >\r\n                            <MenuItem value=\"cricket\">Cricket</MenuItem>\r\n                            <MenuItem value=\"football\">FootBall</MenuItem>\r\n                            <MenuItem value=\"PUBG\">PUBG</MenuItem>\r\n                            <MenuItem value=\"FreeFire\">FreeFire</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Squad Size\" \r\n                    InputProps = {{\r\n                        style : {\r\n                            color : 'white',\r\n                            marginBottom : '20px'\r\n                        }\r\n                    }}\r\n                    onChange = {(e) => setData({...data ,size : e.target.value}) }\r\n\r\n                        />\r\n                     \r\n                    <Button variant=\"contained\" onClick = {handleCreate} >\r\n                        Create\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTeam;","import React , {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '250px',\r\n          },\r\n       '& label' : {\r\n        color : 'rgb(201, 201, 201)'\r\n       },\r\n       \r\n       '& label.Mui-focused': {\r\n        color: '#FEA001',\r\n      },\r\n       '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#FEA001',\r\n        color : 'white'\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color : 'white'\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n        color : 'white'\r\n      },\r\n  \r\n}\r\n  }));\r\n\r\n\r\n\r\nconst JoinTeam = () => {\r\n    const [data , setData] = useState({teamCode :\"\"})\r\n    const classes = useStyles();\r\n      const handleCreate = () => {\r\n            fetch('/api/team/addPlayers' , {\r\n                method : 'post',\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(data)\r\n            }).then((res) => {\r\n                if(res.ok){\r\n                    window.location.href = \"/teams\"\r\n                }else{\r\n                    alert('error occur')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div className = \"create_team_page\">\r\n            <div className = \"create_team_form\">\r\n                <div className = \"sub_head\">\r\n                Join Team \r\n                </div>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Team Code\" \r\n                    InputProps = {{\r\n                        style : {\r\n                            color : 'white',\r\n                            marginBottom : '10px'\r\n                        }\r\n                    }}\r\n                    onChange = {(e) => setData({...data ,teamCode : e.target.value}) }\r\n                        />\r\n                     \r\n                    <Button variant=\"contained\" onClick = {handleCreate} >\r\n                        Join\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinTeam;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from '../containers/header'\r\nimport Home from '../pages/home';\r\nimport Login from '../pages/login'\r\nimport Signup from '../pages/signup';\r\nimport Messages from '../pages/messages';\r\nimport Players from '../pages/player';\r\nimport Tournament from '../pages/tournament'\r\nimport Hosted_Tourna from '../containers/hosted_tourna';\r\nimport Active_Tourna from '../containers/active_tourna';\r\nimport Past_Tourna from '../containers/past_tourna';\r\nimport Matches_Tourna from '../containers/matches_tourna';\r\nimport Teams from '../pages/teams';\r\nimport CreateTeam from '../containers/create_team'\r\nimport JoinTeam from '../containers/join_team'\r\n\r\nconst Apiroute = () =>{\r\n  \r\n    return(\r\n      <BrowserRouter>\r\n      <div>\r\n        {window.location.pathname != '/login' && window.location.pathname != '/signup' && <Header /> }\r\n        <Switch>\r\n          <Route path = \"/login\" component = {Login} exact ={true} />\r\n          <Route path = \"/signup\" component = {Signup} exact ={true} />\r\n          <Route path = \"/messages\" component = {Messages} exact ={true} />\r\n          <Route path = \"/players\" component = {Players} exact ={true} />\r\n          <Route path = \"/\" component = {Home} exact = {true} />\r\n          <Route path = \"/teams\" component = {Teams} exact = {true} />\r\n          <Route path = \"/teams/create_team\" component = {CreateTeam} exact = {true} />\r\n          <Route path = \"/teams/join_team\" component = {JoinTeam} exact = {true} />\r\n          <Route path = \"/tournaments\" component = {() => <Tournament Tourn_Cat = {Active_Tourna} />} exact = {true} />\r\n          <Route path = \"/tournaments/hosted\" component = {() => <Tournament Tourn_Cat = {Hosted_Tourna} />} exact = {true} />\r\n          <Route path = \"/tournaments/past\" component = {() => <Tournament Tourn_Cat = {Past_Tourna} />} exact = {true} />\r\n          <Route path = \"/tournaments/matches\" component = {() => <Tournament Tourn_Cat = {Matches_Tourna} />} exact = {true} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n      )\r\n    \r\n  }\r\n  \r\n\r\n\r\nexport default Apiroute;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store , persistor} from './redux/store'\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport Apiroute from './routes/apirouter'\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <PersistGate persistor = {persistor}>\r\n      <Apiroute />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/propic.5ca40737.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.7117a4bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/versus.a1439654.svg\";"],"sourceRoot":""}